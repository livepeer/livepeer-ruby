# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Livepeer
  module Operations

    class GetPublicTotalViewsMetricsRequest < Livepeer::Utils::FieldAugmented
      extend T::Sig

      # The playback ID to filter the query results. This can be a canonical
      # playback ID from Livepeer assets or streams, or dStorage identifiers
      # for assets
      # 
      field :playback_id, String, { 'path_param': { 'field_name': 'playbackId', 'style': 'simple', 'explode': false } }


      sig { params(playback_id: String).void }
      def initialize(playback_id: nil)
        @playback_id = playback_id
      end
    end

    # A simplified metric object about aggregate viewership of an
    # asset. Either playbackId or dStorageUrl will be set.
    # 
    class GetPublicTotalViewsMetricsResponseBody < Livepeer::Utils::FieldAugmented
      extend T::Sig

      # The total playtime in minutes for the asset
      field :playtime_mins, Float, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('playtimeMins') } }
      # The number of views for the asset
      field :view_count, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('viewCount') } }
      # The URL of the distributed storage used for the asset
      field :d_storage_url, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('dStorageUrl') } }
      # The playback ID associated with the metric
      field :playback_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('playbackId') } }


      sig { params(playtime_mins: Float, view_count: Integer, d_storage_url: T.nilable(String), playback_id: T.nilable(String)).void }
      def initialize(playtime_mins: nil, view_count: nil, d_storage_url: nil, playback_id: nil)
        @playtime_mins = playtime_mins
        @view_count = view_count
        @d_storage_url = d_storage_url
        @playback_id = playback_id
      end
    end


    class GetPublicTotalViewsMetricsResponse < Livepeer::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # HTTP response status code for this operation
      field :status_code, Integer
      # A single Metric object with the viewCount and playtimeMins metrics.
      field :object, T.nilable(Operations::GetPublicTotalViewsMetricsResponseBody)
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, T.nilable(Faraday::Response)


      sig { params(content_type: String, status_code: Integer, object: T.nilable(Operations::GetPublicTotalViewsMetricsResponseBody), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, object: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @object = object
        @raw_response = raw_response
      end
    end
  end
end
