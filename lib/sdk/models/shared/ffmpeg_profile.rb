# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Livepeer
  module Shared

    class Profile < T::Enum
      enums do
        H264_BASELINE = new('H264Baseline')
        H264_MAIN = new('H264Main')
        H264_HIGH = new('H264High')
        H264_CONSTRAINED_HIGH = new('H264ConstrainedHigh')
      end
    end



    class Encoder < T::Enum
      enums do
        H264 = new('h264')
        HEVC = new('hevc')
        VP8 = new('vp8')
        VP9 = new('vp9')
      end
    end


    # LMPS ffmpeg profile
    class FfmpegProfile < Livepeer::Utils::FieldAugmented
      extend T::Sig


      field :bitrate, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('bitrate') } }

      field :fps, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('fps') } }

      field :height, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('height') } }

      field :name, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }

      field :width, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('width') } }

      field :encoder, T.nilable(Shared::Encoder), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('encoder'), 'decoder': Utils.enum_from_string(Shared::Encoder, true) } }

      field :fps_den, T.nilable(Integer), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('fpsDen') } }

      field :gop, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('gop') } }

      field :profile, T.nilable(Shared::Profile), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('profile'), 'decoder': Utils.enum_from_string(Shared::Profile, true) } }


      sig { params(bitrate: Integer, fps: Integer, height: Integer, name: String, width: Integer, encoder: T.nilable(Shared::Encoder), fps_den: T.nilable(Integer), gop: T.nilable(String), profile: T.nilable(Shared::Profile)).void }
      def initialize(bitrate: nil, fps: nil, height: nil, name: nil, width: nil, encoder: nil, fps_den: nil, gop: nil, profile: nil)
        @bitrate = bitrate
        @fps = fps
        @height = height
        @name = name
        @width = width
        @encoder = encoder
        @fps_den = fps_den
        @gop = gop
        @profile = profile
      end
    end
  end
end
