# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Livepeer
  module Shared

    class MultistreamTarget < Livepeer::Utils::FieldAugmented
      extend T::Sig

      # Timestamp (in milliseconds) at which multistream target object was
      # created
      # 
      field :created_at, T.nilable(Float), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('createdAt') } }
      # If true then this multistream target will not be used for pushing
      # even if it is configured in a stream object.
      # 
      field :disabled, T.nilable(T::Boolean), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('disabled') } }

      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }

      field :name, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }


      sig { params(created_at: T.nilable(Float), disabled: T.nilable(T::Boolean), id: T.nilable(String), name: T.nilable(String)).void }
      def initialize(created_at: nil, disabled: nil, id: nil, name: nil)
        @created_at = created_at
        @disabled = disabled
        @id = id
        @name = name
      end
    end
  end
end
