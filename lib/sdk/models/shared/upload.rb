# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/encryption'

module Livepeer
  module Shared
    # Parameters for the upload task
    class Upload < Livepeer::Utils::FieldAugmented
      extend T::Sig


      field :encryption, T.nilable(Shared::Encryption), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('encryption') } }
      # ID of the original recorded session to avoid re-transcoding
      # of the same content. Only used for import task.
      # 
      field :recorded_session_id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('recordedSessionId') } }
      # URL of the asset to "upload"
      field :url, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('url') } }


      sig { params(encryption: T.nilable(Shared::Encryption), recorded_session_id: T.nilable(String), url: T.nilable(String)).void }
      def initialize(encryption: nil, recorded_session_id: nil, url: nil)
        @encryption = encryption
        @recorded_session_id = recorded_session_id
        @url = url
      end
    end
  end
end
