# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Livepeer
  module Shared

    class MultistreamTargetInput < Livepeer::Utils::FieldAugmented
      extend T::Sig

      # Livepeer-compatible multistream target URL (RTMP(S) or SRT)
      field :url, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('url') } }
      # If true then this multistream target will not be used for pushing
      # even if it is configured in a stream object.
      # 
      field :disabled, T.nilable(T::Boolean), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('disabled') } }

      field :name, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('name') } }


      sig { params(url: String, disabled: T.nilable(T::Boolean), name: T.nilable(String)).void }
      def initialize(url: nil, disabled: nil, name: nil)
        @url = url
        @disabled = disabled
        @name = name
      end
    end
  end
end
