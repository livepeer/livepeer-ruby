# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Livepeer
  module Shared
    # An individual metric about usage of a user.
    # 
    class UsageMetric < Livepeer::Utils::FieldAugmented
      extend T::Sig

      # The creator ID associated with the metric
      field :creator_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('CreatorID') } }
      # The number of minutes of delivery usage
      field :delivery_usage_mins, Float, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('DeliveryUsageMins') } }
      # The number of minutes of storage usage
      field :storage_usage_mins, Float, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('StorageUsageMins') } }
      # The number of minutes of total usage
      field :total_usage_mins, Float, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('TotalUsageMins') } }
      # The user ID associated with the metric
      field :user_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('UserID') } }


      sig { params(creator_id: String, delivery_usage_mins: Float, storage_usage_mins: Float, total_usage_mins: Float, user_id: String).void }
      def initialize(creator_id: nil, delivery_usage_mins: nil, storage_usage_mins: nil, total_usage_mins: nil, user_id: nil)
        @creator_id = creator_id
        @delivery_usage_mins = delivery_usage_mins
        @storage_usage_mins = storage_usage_mins
        @total_usage_mins = total_usage_mins
        @user_id = user_id
      end
    end
  end
end
